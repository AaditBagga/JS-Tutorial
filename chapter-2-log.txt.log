const Früh = "foobar";
undefined
// a one line comment

/* this is a longer,
 * multi-line comment
 */

undefined
/* You can't, however, /* nest comments */ SyntaxError */
VM14:1 Uncaught SyntaxError: Invalid regular expression: missing /
/* You can /* nest comments *\/ by escaping slashes */
undefined
let x;
console.log(x); // logs "undefined"
VM16:2 undefined
undefined
const x; // SyntaxError: Missing initializer in const declaration
VM17:1 Uncaught SyntaxError: Missing initializer in const declaration
if (Math.random() > 0.5) {
  const y = 5;
}
console.log(y); // ReferenceError: y is not defined

VM18:4 Uncaught ReferenceError: y is not defined
    at <anonymous>:4:13
(anonymous) @ VM18:4
if (true) {
  var x = 5;
}
console.log(x); // x is 5

VM19:1 Uncaught SyntaxError: Identifier 'x' has already been declared
    at <anonymous>:1:1
(anonymous) @ VM19:1
if (true) {
  var z = 5;
}
console.log(z); // z is 5
VM22:4 5
undefined
console.log(x === undefined); // true
var x = 3;

(function () {
  console.log(x); // undefined
  var x = "local value";
})();

VM23:1 Uncaught SyntaxError: Identifier 'x' has already been declared
    at <anonymous>:1:1
(anonymous) @ VM23:1
console.log(a === undefined); // true
var a = 3;

(function () {
  console.log(a); // undefined
  var a = "local value";
})();
VM25:1 true
VM25:5 undefined
undefined
console.log(b); // ReferenceError
const b = 3;

console.log(c); // ReferenceError
let c = 3;

VM27:1 Uncaught ReferenceError: b is not defined
    at <anonymous>:1:13
(anonymous) @ VM27:1
const PI = 3.14;
undefined
// THIS WILL CAUSE AN ERROR
function f() {}
const f = 5;

// THIS WILL CAUSE AN ERROR TOO
function f() {
  const g = 5;
  var g;
}

VM29:3 Uncaught SyntaxError: Identifier 'f' has already been declared
const MY_OBJECT = { key: "value" };
MY_OBJECT.key = "otherValue";

'otherValue'
const MY_ARRAY = ["HTML", "CSS"];
MY_ARRAY.push("JAVASCRIPT");
console.log(MY_ARRAY); // ['HTML', 'CSS', 'JAVASCRIPT'];

VM31:3 (3) ['HTML', 'CSS', 'JAVASCRIPT']
undefined
let answer = 42;
undefined
answer = "Thanks for all the fish!";
'Thanks for all the fish!'
x = "The answer is " + 42; // "The answer is 42"
y = 42 + " is the answer"; // "42 is the answer"
z = "37" + 7; // "377"

'377'
x = "The answer is " + 42; // "The answer is 42"
'The answer is 42'
y = 42 + " is the answer"; // "42 is the answer"
'42 is the answer'
z = "37" + 7; // "377"
'377'
"37" - 7; // 30
30
"37" * 7; // 259
259
parseInt("101", 2); // 5
5
"1.1" + "1.1" // '1.11.1'
'1.11.1'
(+"1.1") + (+"1.1"); // 2.2
// Note: the parentheses are added for clarity, not required.

2.2
const coffees = ["French Roast", "Colombian", "Kona"];

undefined
const fish = ["Lion", , "Angel"];

undefined
console.log(fish);
// [ 'Lion', <1 empty item>, 'Angel' ]

VM54:1 (3) ['Lion', empty, 'Angel']
undefined
const myList = ["home", , "school"];

undefined
const myList = [, "home", , "school"];

undefined
const myList = ["home", , "school", ,];

undefined
const myList = [
  "home",
  "school",
+ "hospital",
];

undefined
const myList = ["home", /* empty */, "school", /* empty */, ];

undefined
3.1415926
.123456789
3.1E+12
.1e-23

1e-24
const sales = "Toyota";

function carTypes(name) {
  return name === "Honda" ? name : `Sorry, we don't sell ${name}.`;
}

const car = { myCar: "Saturn", getCar: carTypes("Honda"), special: sales };

console.log(car.myCar); // Saturn
console.log(car.getCar); // Honda
console.log(car.special); // Toyota

VM82:9 Saturn
VM82:10 Honda
VM82:11 Toyota
undefined
const car = { manyCars: { a: "Saab", b: "Jeep" }, 7: "Mazda" };

console.log(car.manyCars.b); // Jeep
console.log(car[7]); // Mazda

VM86:3 Jeep
VM86:4 Mazda
undefined
const unusualPropertyNames = {
  '': 'An empty string',
  '!': 'Bang!'
}
console.log(unusualPropertyNames.'');   // SyntaxError: Unexpected string
console.log(unusualPropertyNames.!);    // SyntaxError: Unexpected token !

VM90:5 Uncaught SyntaxError: Unexpected string
console.log(unusualPropertyNames[""]); // An empty string
console.log(unusualPropertyNames["!"]); // Bang!

VM94:1 Uncaught ReferenceError: unusualPropertyNames is not defined
    at <anonymous>:1:13
(anonymous) @ VM94:1
console.log(unusualPropertyNames[""]); // An empty string


VM100:1 Uncaught ReferenceError: unusualPropertyNames is not defined
    at <anonymous>:1:13
(anonymous) @ VM100:1
